# Routes

# Resources
GET     /robots.txt                      controllers.Assets.at(path="/public", file = "robots.txt")
GET     /assets/*file                    controllers.Assets.at(path="/public", file)
GET     /assets-versioned/*file          controllers.Assets.versioned(path="/public", file: Asset)
GET     /javascriptRoutes                controllers.AppController.javascriptRoutes
GET     /messages.js                     controllers.AppController.jsMessages

# Auth/User
GET     /auth/signIn                     controllers.NewsUserController.signIn
POST    /auth/signIn                     controllers.NewsUserController.signInPost
GET     /auth/signOut                    controllers.NewsUserController.signOut
GET     /auth/signUp                     controllers.NewsUserController.signUp
POST    /auth/signUp                     controllers.NewsUserController.signUpPost
GET     /auth/user                       controllers.NewsUserController.user

# Public site
GET     /                                controllers.AppController.index
GET     /help                            controllers.AppController.help
GET     /section/:category               controllers.AppController.section(category:kipsigman.domain.entity.Category)
GET     /section/:category/template/:id  controllers.ArticleTemplateController.view(category:kipsigman.domain.entity.Category, id:Int)
GET     /section/:category/:seoAlias     controllers.ArticleController.view(category:kipsigman.domain.entity.Category, seoAlias:String, preview: Boolean ?= false)

# Content Management
GET     /content/articles                        controllers.ArticleController.list
GET     /content/articles/create/:templateId     controllers.ArticleController.create(templateId:Int)
GET     /content/articles/:id/delete             controllers.ArticleController.delete(id:Int)
GET     /content/articles/:id/edit               controllers.ArticleController.edit(id:Int)
GET     /content/articles/:id/preview            controllers.ArticleController.preview(id:Int)
GET     /content/articles/:id/saveStatus         controllers.ArticleController.saveStatus(id:Int, status:models.Content.Status)
POST    /content/articles/:id/tag                controllers.ArticleController.saveTag(id:Int)

GET     /content/articleTemplates                controllers.ArticleTemplateController.list
GET     /content/articleTemplates/category/:category controllers.ArticleTemplateController.listByCategory(category:kipsigman.domain.entity.Category)
GET     /content/articleTemplates/create         controllers.ArticleTemplateController.create
GET     /content/articleTemplates/:id/edit       controllers.ArticleTemplateController.edit(id:Int)
POST    /content/articleTemplates                controllers.ArticleTemplateController.save

# Admin